@using Blazored.LocalStorage
@inherits LayoutComponentBase

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <BlazoredToasts Position="ToastPosition.TopRight"
                    Timeout="2"
                    ShowProgressBar="true" />

    <main>
        <div class="top-row px-4">
            <a href="/cart" style="text-decoration: none">Koszyk</a>
            <a hidden href="/register" style="text-decoration: none">Zarządzaj</a>
            @if (Username == null || String.IsNullOrWhiteSpace(Username))
            {
                <a href="/login" style="text-decoration: none">Zaloguj</a>
            }
            else
            {
                <a href="/" @onclick="LogOut" style="text-decoration: none">Wyloguj</a>
                <a style="text-decoration: none; color: forestgreen">
                    Zalogowany jako, @Username
                </a>
            }
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    [Inject]
    public ILocalStorageService local { get; set; }
    [Inject]
    public IToastService toast { get; set; }
    public string Username { get; set; }

    protected override async void OnAfterRender(bool firstRender)
    {
        await SetLogin();
    }

    public async Task SetLogin()
    {
        var login = await local.GetItemAsync<string>("Username");
        if (Username != login)
        {
            Username = login;
            StateHasChanged();
        }
    }

    public async Task LogOut()
    {
        await local.RemoveItemAsync("Username");
        await local.RemoveItemAsync("UserId");
        toast.ShowSuccess("Udało się wylogować");
    }
}